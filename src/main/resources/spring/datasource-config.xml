<?xml version="1.0" encoding="UTF-8"?>
<!--
    Application context definition for PetClinic Datasource.
-->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/jee
         http://www.springframework.org/schema/jee/spring-jee.xsd">

    <!-- ========================= DATASOURCE DEFINITION ========================= -->

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the dataSource definition below) -->
    <context:property-placeholder location="classpath:spring/data-access.properties" system-properties-mode="OVERRIDE"/>

    <!-- DataSource configuration for the tomcat jdbc connection pool
    See here for more details on commons-dbcp versus tomcat-jdbc:
    http://blog.ippon.fr/2013/03/13/improving-the-performance-of-the-spring-petclinic-sample-application-part-3-of-5/-->
    <beans profile="hsqldb">
        <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
              p:driverClassName="org.hsqldb.jdbcDriver" p:url="jdbc:hsqldb:mem:petclinic"
              p:username="sa" p:password=""/>

        <!-- Database initializer. If any of the script fails, the initialization stops. -->
        <!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
        <jdbc:initialize-database data-source="dataSource">
            <jdbc:script location="classpath:db/hsqldb/initDB.sql"/>
            <jdbc:script location="classpath:db/hsqldb/populateDB.sql"/>
        </jdbc:initialize-database>
    </beans>

    <beans profile="mysql">
        <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
              p:driverClassName="com.mysql.cj.jdbc.Driver" p:url="jdbc:mysql://mysql:3306/petclinic?useUnicode=true"
              p:username="petclinic" p:password="petclinic"/>

        <!-- Database initializer. If any of the script fails, the initialization stops. -->
        <!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
        <jdbc:initialize-database data-source="dataSource">
            <jdbc:script location="classpath:db/mysql/initDB.sql"/>
            <jdbc:script location="classpath:db/mysql/populateDB.sql"/>
        </jdbc:initialize-database>
    </beans>

    <beans profile="postgresql">
        <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
              p:driverClassName="org.postgresql.Driver" p:url="jdbc:postgresql://localhost:5432/petclinic"
              p:username="postgres" p:password="petclinic"/>

        <!-- Database initializer. If any of the script fails, the initialization stops. -->
        <!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
        <jdbc:initialize-database data-source="dataSource">
            <jdbc:script location="classpath:db/postgresql/initDB.sql"/>
            <jdbc:script location="classpath:db/postgresql/populateDB.sql"/>
        </jdbc:initialize-database>
    </beans>

    <beans profile="javaee">
        <!-- JNDI DataSource for JEE environments -->
        <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/petclinic"/>
    </beans>
</beans>
